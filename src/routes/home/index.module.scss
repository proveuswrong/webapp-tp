@use "src/stylesheets/variables/spacings";
@use "src/stylesheets/variables/breakpoints";
@use "src/stylesheets/variables/typo";

$iconSize: calc(1rem + 1vw);
$uri: url(../../assets/eye.svg);
$gappedBorders: linear-gradient(
      to right,
      transparent 10%,
      black 10%,
      black 45%,
      transparent 45%,
      transparent 55%,
      black 55%,
      black 90%,
      transparent 90%
    )
    0 100%,
  linear-gradient(
      to right,
      transparent 10%,
      black 10%,
      black 45%,
      transparent 45%,
      transparent 55%,
      black 55%,
      black 90%,
      transparent 90%
    )
    0 0,
  linear-gradient(to bottom, transparent 10%, black 10%, black 90%, transparent 90%) 100% 0,
  linear-gradient(to bottom, transparent 10%, black 10%, black 90%, transparent 90%) 0 0;

// Layout
.home {
  display: block;

  section.leftFloating,
  section.rightFloating {
    display: flex;
    flex-direction: column;

    figure {
      margin-left: auto;
      margin-right: auto;
      margin-bottom: spacings.$s-8;
      margin-top: spacings.$s-8;
    }
  }

  section.twoColumnsMerging {
    display: grid;
    grid-template-columns: 1fr;
  }

  @media (min-width: breakpoints.$md) {
    section.twoColumn,
    section.threeColumn {
      column-gap: 2rem;
      text-align: justify;
    }
    section.twoColumn {
      column-count: 2;
    }

    section.threeColumn {
      column-count: 2;
    }

    section.leftFloating,
    section.rightFloating {
      display: flex;
      flex-direction: column;

      h1 {
        flex: 1;
      }

      p {
        flex: 2;
      }
    }

    section.rightFloating {
      figure {
        margin-left: spacings.$s-8;
        float: right;
      }
    }

    section.leftFloating {
      figure {
        margin-right: spacings.$s-8;
        float: left;
      }
    }

    section.twoColumnsMerging {
      grid-template-columns: 1fr 1fr;

      & > p {
        grid-column: span 2;
      }
    }
  }

  @media (min-width: breakpoints.$xl) {
    section.twoColumn {
      column-count: 2;
    }

    section.threeColumn {
      column-count: 3;
    }

    section.leftFloating,
    section.rightFloating {
      display: flex;
      flex-direction: row;
    }
  }
}

// Styling
.home {
  @keyframes shake {
    0%,
    100% {
      transform: translateX(0);
    }
    10%,
    30%,
    50%,
    70%,
    90% {
      transform: translateX(-10px);
    }
    20%,
    40%,
    60%,
    80% {
      transform: translateX(10px);
    }
  }
  @keyframes swing {
    20% {
      transform: rotate(15deg);
    }
    40% {
      transform: rotate(-10deg);
    }
    60% {
      transform: rotate(5deg);
    }
    80% {
      transform: rotate(-5deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }
  @keyframes rotate-in-down-left {
    0% {
      transform-origin: left bottom;
      transform: rotate(-90deg);
      opacity: 0;
    }
    100% {
      transform-origin: left bottom;
      transform: rotate(0);
      opacity: 1;
    }
  }
  @keyframes bounce-out-down {
    0% {
      transform: translateY(0);
    }
    20% {
      opacity: 1;
      transform: translateY(-20px);
    }
    100% {
      opacity: 0;
      transform: translateY(20px);
    }
  }

  word-break: break-word;

  .logo {
    height: calc(100vh - 5rem);
    width: 100%;
    margin-bottom: 2.28rem;
    padding: 3rem;
  }

  header {
  }
  section {
    margin-top: 20 * spacings.$spacing;
  }

  img {
    max-width: 100%;
  }

  section > p:first-of-type::first-letter {
    initial-letter: 2;
    margin-right: 0.5rem;
  }

  section.principles {
    text-align: center;
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 16 * spacings.$spacing;

    img {
      width: 4.5rem;
    }

    @media (min-width: breakpoints.$md) {
      grid-template-columns: 1fr 1fr;
      grid-gap: 0;
      & > div {
        padding: 12 * spacings.$spacing 18 * spacings.$spacing;
      }
      & > div:first-of-type {
        grid-column: span 2;
        position: relative;

        background: linear-gradient(to right, transparent 10%, black 10%, black 45%, transparent 45%, transparent 55%, black 55%, black 90%, transparent 90%) 0 0,
        linear-gradient(to bottom, transparent 20%, black 20%, black 80%, transparent 80%) 100% 0,
        linear-gradient(to bottom, transparent 20%, black 20%, black 80%, transparent 80%) 0 0;
        background-repeat: no-repeat;
        background-size: 100% 1px, 1px 100%, 1px 100%;

        &::before,
        &::after {
          position: absolute;
          content: $uri;
          content: "";
          display: block;
          height: $iconSize;
          width: $iconSize;
          background-size: $iconSize $iconSize;
          background-image: $uri;
          background-repeat: no-repeat;
        }

        &::before {
          top: calc(-1 * $iconSize/2);
          left: 50%;
          transform: translateX(-50%);
        }

        &::after {
          bottom: calc(-1 * $iconSize/2);
          left: 50%;
          transform: translateX(-50%);
        }
      }
      & > div:nth-of-type(odd):not(:first-of-type) {
        background: linear-gradient(to right, transparent 10%, black 10%, black 90%, transparent 90%) 0 0,
          linear-gradient(to bottom, transparent 20%, black 20%, black 80%, transparent 80%) 100% 0;
        background-repeat: no-repeat;
        background-size: 100% 1px, 1px 100%;
      }

      & > div:nth-of-type(odd):not(:first-of-type){
        position: relative;

        &::before,
        &::after {
          position: absolute;
          content: $uri;
          content: "";
          display: block;
          height: $iconSize;
          width: $iconSize;
          background-size: $iconSize $iconSize;
          background-image: $uri;
          background-repeat: no-repeat;
        }

        &::before {
          top: calc(-1 * $iconSize/2);
          left: 0%;
          transform: translateX(-50%);
        }

        &::after {
          bottom: calc(-1 * $iconSize/2);
          left: 0%;
          transform: translateX(-50%);
        }
      }


      & > div:nth-of-type(even) {
        background: linear-gradient(to right, transparent 10%, black 10%, black 90%, transparent 90%) 0 0,
          linear-gradient(to bottom, transparent 20%, black 20%, black 80%, transparent 80%) 100% 0,
          linear-gradient(to bottom, transparent 20%, black 20%, black 80%, transparent 80%) 0 0;
        background-repeat: no-repeat;
        background-size: 100% 1px, 1px 100%, 1px 100%;
      }

      & > div:nth-last-child(2) {
        background: linear-gradient(to right, transparent 10%, black 10%, black 90%, transparent 90%) 0 100%,
          linear-gradient(to right, transparent 10%, black 10%, black 90%, transparent 90%) 0 0,
          linear-gradient(to bottom, transparent 20%, black 20%, black 80%, transparent 80%) 100% 0,
          linear-gradient(to bottom, transparent 20%, black 20%, black 80%, transparent 80%) 0 0;
        background-repeat: no-repeat;
        background-size: 100% 1px, 100% 1px, 1px 100%, 1px 100%;
      }

      & > div:last-child {
        background: linear-gradient(to right, transparent 10%, black 10%, black 90%, transparent 90%) 0 100%,
          linear-gradient(to right, transparent 10%, black 10%, black 90%, transparent 90%) 0 0,
          linear-gradient(to bottom, transparent 20%, black 20%, black 80%, transparent 80%) 100% 0;
        background-repeat: no-repeat;
        background-size: 100% 1px, 100% 1px, 1px 100%;
      }
    }
  }

  & > header {
    padding: min(3vw, 14 * spacings.$spacing) min(6vw, 28 * spacings.$spacing);
    margin-left: auto;
    margin-right: auto;
    text-align: center;
    position: relative;

    background: $gappedBorders;
    background-repeat: no-repeat;
    background-size: 100% 1px, 100% 1px, 1px 100%, 1px 100%;

    &::before,
    &::after {
      position: absolute;
      content: $uri;
      content: "";
      display: block;
      height: $iconSize;
      width: $iconSize;
      background-size: $iconSize $iconSize;
      background-image: $uri;
      background-repeat: no-repeat;
    }

    &::before {
      top: calc(-1 * $iconSize/2);
      left: 50%;
      transform: translateX(-50%);
    }

    &::after {
      bottom: calc(-1 * $iconSize/2);
      left: 50%;
      transform: translateX(-50%);
    }

    h1 {
      font-size: 3rem;
    }
    p {
      font-size: typo.$s;
    }
  }

  section.leftFloating,
  section.rightFloating {
    figure {
      max-width: 50%;
    }
    p {
      text-align: justify;
    }
  }
}
